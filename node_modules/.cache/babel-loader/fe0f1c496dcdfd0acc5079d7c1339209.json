{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ajhar\\\\Desktop\\\\react.js\\\\myapp\\\\src\\\\Component\\\\SplitForm\\\\index.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport InpuForms from '../inputElements/Inputs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet TextInput = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.name,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form-control my-2\",\n      type: props.type,\n      name: props.name,\n      id: props.name,\n      value: props.value,\n      onChange: props.onChange,\n      placeholder: props.placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 11\n  }, this);\n};\n\n_c = TextInput;\nTextInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func\n};\nTextInput.defaultProps = {\n  type: 'text',\n  label: '',\n  placeholder: ''\n};\n\nlet Forms = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"container\",\n    onSubmit: props.handleSumit,\n    children: [/*#__PURE__*/_jsxDEV(TextInput, {\n      label: \"Name\",\n      name: \"name\",\n      placeholder: \"Enter Your Name\",\n      value: props.name,\n      onChange: props.handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      label: \"E-mail\",\n      name: \"email\",\n      placeholder: \"Enter Your E-mail\",\n      value: props.email,\n      type: \"email\",\n      onChange: props.handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      label: \"Password\",\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Enter Your password\",\n      value: props.password,\n      onChange: props.handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"form-control btn btn-success\",\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Forms;\nForms.propTypes = {\n  value: PropTypes.object,\n  handleChange: PropTypes.func,\n  handleSumit: PropTypes.func\n};\n\nclass SplitForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      email: '',\n      password: ''\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSumit = e => {\n      e.preventDefault();\n      let data = {};\n      data.name = e.target.name.value;\n      data.email = e.target.email.value;\n      data.password = e.target.password.value;\n      console.log(data);\n      e.target.reset();\n      this.setState({\n        name: '',\n        email: '',\n        password: ''\n      });\n    };\n  }\n\n  render() {\n    let {\n      name,\n      email,\n      password\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Forms, {\n        value: this.state,\n        handleChange: this.handleChange,\n        handleSumit: this.handleSumit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default SplitForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TextInput\");\n$RefreshReg$(_c2, \"Forms\");","map":{"version":3,"sources":["C:/Users/ajhar/Desktop/react.js/myapp/src/Component/SplitForm/index.jsx"],"names":["React","Component","PropTypes","InpuForms","TextInput","props","name","label","type","value","onChange","placeholder","propTypes","string","isRequired","func","defaultProps","Forms","handleSumit","handleChange","email","password","object","SplitForm","state","event","setState","target","e","preventDefault","data","console","log","reset","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAEA,IAAIC,SAAS,GAAEC,KAAD,IAAS;AAEpB,sBAAO;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACF;AAAO,MAAA,OAAO,EAAEA,KAAK,CAACC,IAAtB;AAAA,gBAA6BD,KAAK,CAACE;AAAnC;AAAA;AAAA;AAAA;AAAA,YADE,eAEF;AACQ,MAAA,SAAS,EAAC,mBADlB;AAEQ,MAAA,IAAI,EAAEF,KAAK,CAACG,IAFpB;AAGQ,MAAA,IAAI,EAAEH,KAAK,CAACC,IAHpB;AAIQ,MAAA,EAAE,EAAED,KAAK,CAACC,IAJlB;AAKQ,MAAA,KAAK,EAAED,KAAK,CAACI,KALrB;AAMQ,MAAA,QAAQ,EAAEJ,KAAK,CAACK,QANxB;AAOQ,MAAA,WAAW,EAAEL,KAAK,CAACM;AAP3B;AAAA;AAAA;AAAA;AAAA,YAFE;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAYF,CAdD;;KAAIP,S;AAgBJA,SAAS,CAACQ,SAAV,GAAoB;AAChBN,EAAAA,IAAI,EAACJ,SAAS,CAACW,MAAV,CAAiBC,UADN;AAEhBL,EAAAA,KAAK,EAACP,SAAS,CAACW,MAAV,CAAiBC,UAFP;AAGhBP,EAAAA,KAAK,EAACL,SAAS,CAACW,MAAV,CAAiBC,UAHP;AAIhBN,EAAAA,IAAI,EAACN,SAAS,CAACW,MAAV,CAAiBC,UAJN;AAKhBJ,EAAAA,QAAQ,EAACR,SAAS,CAACa;AALH,CAApB;AAOAX,SAAS,CAACY,YAAV,GAAuB;AACnBR,EAAAA,IAAI,EAAC,MADc;AAEnBD,EAAAA,KAAK,EAAC,EAFa;AAGnBI,EAAAA,WAAW,EAAC;AAHO,CAAvB;;AAKC,IAAIM,KAAK,GAAEZ,KAAD,IAAS;AACnB,sBAAO;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,QAAQ,EAAEA,KAAK,CAACa,WAA5C;AAAA,4BACO,QAAC,SAAD;AACA,MAAA,KAAK,EAAC,MADN;AAEA,MAAA,IAAI,EAAC,MAFL;AAGA,MAAA,WAAW,EAAC,iBAHZ;AAIA,MAAA,KAAK,EAAEb,KAAK,CAACC,IAJb;AAKA,MAAA,QAAQ,EAAED,KAAK,CAACc;AALhB;AAAA;AAAA;AAAA;AAAA,YADP,eASO,QAAC,SAAD;AACA,MAAA,KAAK,EAAC,QADN;AAEA,MAAA,IAAI,EAAC,OAFL;AAGA,MAAA,WAAW,EAAC,mBAHZ;AAIA,MAAA,KAAK,EAAEd,KAAK,CAACe,KAJb;AAKA,MAAA,IAAI,EAAC,OALL;AAMA,MAAA,QAAQ,EAAEf,KAAK,CAACc;AANhB;AAAA;AAAA;AAAA;AAAA,YATP,eAkBK,QAAC,SAAD;AACE,MAAA,KAAK,EAAC,UADR;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,WAAW,EAAC,qBAJd;AAKE,MAAA,KAAK,EAAEd,KAAK,CAACgB,QALf;AAME,MAAA,QAAQ,EAAEhB,KAAK,CAACc;AANlB;AAAA;AAAA;AAAA;AAAA,YAlBL,eA0BU;AACA,MAAA,SAAS,EAAC,8BADV;AAEA,MAAA,IAAI,EAAC,QAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BV;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAmCC,CApCD;;MAAIF,K;AAqCJA,KAAK,CAACL,SAAN,GAAgB;AACZH,EAAAA,KAAK,EAACP,SAAS,CAACoB,MADJ;AAEZH,EAAAA,YAAY,EAACjB,SAAS,CAACa,IAFX;AAGbG,EAAAA,WAAW,EAAChB,SAAS,CAACa;AAHT,CAAhB;;AAOD,MAAMQ,SAAN,SAAwBtB,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BuB,KAD8B,GACxB;AACFlB,MAAAA,IAAI,EAAC,EADH;AAEFc,MAAAA,KAAK,EAAC,EAFJ;AAGFC,MAAAA,QAAQ,EAAC;AAHP,KADwB;;AAAA,SAM9BF,YAN8B,GAMhBM,KAAD,IAAS;AAClB,WAAKC,QAAL,CAAc;AACV,SAACD,KAAK,CAACE,MAAN,CAAarB,IAAd,GAAqBmB,KAAK,CAACE,MAAN,CAAalB;AADxB,OAAd;AAIH,KAX6B;;AAAA,SAY9BS,WAZ8B,GAYjBU,CAAD,IAAK;AACbA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAIC,IAAI,GAAC,EAAT;AACAA,MAAAA,IAAI,CAACxB,IAAL,GAAUsB,CAAC,CAACD,MAAF,CAASrB,IAAT,CAAcG,KAAxB;AACAqB,MAAAA,IAAI,CAACV,KAAL,GAAWQ,CAAC,CAACD,MAAF,CAASP,KAAT,CAAeX,KAA1B;AACAqB,MAAAA,IAAI,CAACT,QAAL,GAAcO,CAAC,CAACD,MAAF,CAASN,QAAT,CAAkBZ,KAAhC;AACAsB,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAF,MAAAA,CAAC,CAACD,MAAF,CAASM,KAAT;AACA,WAAKP,QAAL,CAAc;AACVpB,QAAAA,IAAI,EAAC,EADK;AACDc,QAAAA,KAAK,EAAC,EADL;AACSC,QAAAA,QAAQ,EAAC;AADlB,OAAd;AAGH,KAvB6B;AAAA;;AAwBhCa,EAAAA,MAAM,GAAG;AACL,QAAI;AAAC5B,MAAAA,IAAD;AAAOc,MAAAA,KAAP;AAAaC,MAAAA;AAAb,QAAuB,KAAKG,KAAhC;AAEA,wBACI;AAAA,6BACI,QAAC,KAAD;AACA,QAAA,KAAK,EAAE,KAAKA,KADZ;AAEA,QAAA,YAAY,EAAE,KAAKL,YAFnB;AAGA,QAAA,WAAW,EAAE,KAAKD;AAHlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAnC+B;;AAsClC,eAAeK,SAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport InpuForms from '../inputElements/Inputs';\r\n\r\nlet TextInput=(props)=>{\r\n   \r\n   return <div className='form-group'>\r\n        <label htmlFor={props.name}>{props.label}</label>\r\n        <input\r\n                className='form-control my-2'\r\n                type={props.type} \r\n                name={props.name} \r\n                id={props.name}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                placeholder={props.placeholder}\r\n                  />\r\n    </div>    \r\n}\r\n\r\nTextInput.propTypes={\r\n    name:PropTypes.string.isRequired,\r\n    value:PropTypes.string.isRequired,\r\n    label:PropTypes.string.isRequired,\r\n    type:PropTypes.string.isRequired,\r\n    onChange:PropTypes.func\r\n}\r\nTextInput.defaultProps={\r\n    type:'text',\r\n    label:'',\r\n    placeholder:''\r\n}\r\n let Forms=(props)=>{\r\n return <form className='container' onSubmit={props.handleSumit}>\r\n               <TextInput\r\n               label='Name'\r\n               name='name'\r\n               placeholder='Enter Your Name'\r\n               value={props.name}\r\n               onChange={props.handleChange}\r\n               />\r\n\r\n               <TextInput\r\n               label='E-mail'\r\n               name='email'\r\n               placeholder='Enter Your E-mail'\r\n               value={props.email}\r\n               type='email'\r\n               onChange={props.handleChange}\r\n               />\r\n\r\n             <TextInput\r\n               label='Password'\r\n               name='password'\r\n               type='password'\r\n               placeholder='Enter Your password'\r\n               value={props.password}\r\n               onChange={props.handleChange}\r\n               />\r\n                  <button \r\n                  className='form-control btn btn-success'\r\n                  type='submit'\r\n                  >\r\n                 Submit\r\n              \r\n              </button>\r\n\r\n              </form>\r\n }\r\n Forms.propTypes={\r\n     value:PropTypes.object,\r\n     handleChange:PropTypes.func,\r\n    handleSumit:PropTypes.func,\r\n\r\n }\r\n\r\nclass SplitForm extends Component {\r\n    state={\r\n        name:'',\r\n        email:'',\r\n        password:''\r\n    }\r\n    handleChange=(event)=>{\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n         \r\n    }\r\n    handleSumit=(e)=>{\r\n        e.preventDefault();\r\n        let data={}\r\n        data.name=e.target.name.value;\r\n        data.email=e.target.email.value;\r\n        data.password=e.target.password.value;\r\n        console.log(data);  \r\n        e.target.reset();\r\n        this.setState({\r\n            name:'', email:'', password:''\r\n        })\r\n    } \r\n  render() {\r\n      let {name, email,password}=this.state\r\n      \r\n      return (\r\n          <div>\r\n              <Forms\r\n              value={this.state}\r\n              handleChange={this.handleChange}\r\n              handleSumit={this.handleSumit}/>\r\n          </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default SplitForm;\r\n"]},"metadata":{},"sourceType":"module"}